configfile: "../config/config.yaml"

rule all:
    input:
        expand("../results/00-raw_data/{accession}_1.fastq.gz", accession=config["accession"]),
        expand("../results/00-raw_data/{accession}_2.fastq.gz", accession=config["accession"]),
        # #preprocessing - fastqc-raw-data
        expand("../results/01-preprocessing/01-raw_data-fastqc/{sample}_raw_data.html", sample=config["accession"]),
        expand("../results/01-preprocessing/01-raw_data-fastqc/{sample}_raw_data_fastqc.zip", sample=config["accession"]),
        # #preprocessing - cutadapt
        expand("../results/01-preprocessing/02-cutadapt/{sample}.1_trimmed.fastq.gz", sample=config["accession"]),
        expand("../results/01-preprocessing/02-cutadapt/{sample}.2_trimmed.fastq.gz", sample=config["accession"]),
        expand("../results/01-preprocessing/02-cutadapt/{sample}.qc.txt", sample=config["accession"]),
        # #preprocessing - fastqc-cutadapt_output
        expand("../results/01-preprocessing/03-cutadapt_output-fastqc/{sample}_cutadapt_output.html", sample=config["accession"]),
        expand("../results/01-preprocessing/03-cutadapt_output-fastqc/{sample}_cutadapt_output_fastqc.zip", sample=config["accession"]),
        # #preprocessing - kneaddata-database
        expand("../resources/human_database"),
        # #preprocessing - seqtk
        expand("../results/01-preprocessing/04-kneaddata/{sample}/{sample}.tmp2_1.fastq", sample=config["accession"]),
        expand("../results/01-preprocessing/04-kneaddata/{sample}/{sample}.tmp2_2.fastq", sample=config["accession"]),
        #preprocessing - KneadData
        expand("../results/01-preprocessing/04-kneaddata/{sample}/{sample}.tmp2_1_kneaddata_paired_1.fastq", sample=config["accession"]),
        expand("../results/01-preprocessing/04-kneaddata/{sample}/{sample}.tmp2_1_kneaddata_paired_2.fastq", sample=config["accession"]),
        #preprocessing - repair
        expand("../results/01-preprocessing/04-kneaddata/{sample}/{sample}.1_trimmed_kneaddata_paired_1.fastq", sample=config["accession"]),
        expand("../results/01-preprocessing/04-kneaddata/{sample}/{sample}.1_trimmed_kneaddata_paired_2.fastq", sample=config["accession"]),
        #preprocessing - fastqc-kneaddata
        expand("../results/01-preprocessing/05-kneaddata_output-fastqc/{sample}_kneaddata_output.html", sample=config["accession"]),
        expand("../results/01-preprocessing/05-kneaddata_output-fastqc/{sample}_kneaddata_output_fastqc.zip", sample=config["accession"]),
        #assembly - metaspades
        # expand("../results/02-assembly/{sample}", sample=config["accession"]),
        # #jaeger2fasta
        # expand("../results/03-viral_prediction/viruses/{sample}_viruses.txt", sample=config["accession"]),
        # expand("../results/03-viral_prediction/viruses_fasta/{sample}_viruses.fasta", sample=config["accession"]),
        # #aDNA-aDNA_authentication
        # expand("../results/04-aDNA_authentication/indexes/{sample}_index/{sample}.index.1.bt2", sample=config["accession"]),
        # expand("../results/04-aDNA_authentication/indexes/{sample}_index/{sample}.index.2.bt2", sample=config["accession"]),
        # expand("../results/04-aDNA_authentication/indexes/{sample}_index/{sample}.index.3.bt2", sample=config["accession"]),
        # expand("../results/04-aDNA_authentication/indexes/{sample}_index/{sample}.index.4.bt2", sample=config["accession"]),
        # expand("../results/04-aDNA_authentication/indexes/{sample}_index/{sample}.index.rev.1.bt2", sample=config["accession"]),
        # expand("../results/04-aDNA_authentication/indexes/{sample}_index/{sample}.index.rev.2.bt2", sample=config["accession"]),
        # # #bowtie2 and samtools
        # expand("../results/04-aDNA_authentication/bowtie2_out/{sample}.bam", sample=config["accession"]),
        # expand("../results/04-aDNA_authentication/bowtie2_out/{sample}.bam.bai", sample=config["accession"]),
        # # #pydamage
        # expand("../results/04-aDNA_authentication/pydamage/{sample}_pydamage", sample=config["accession"]),
        # expand("../results/04-aDNA_authentication/pydamage/{sample}_pydamage/pydamage_results.csv", sample=config["accession"]),
        # expand("../results/04-aDNA_authentication/pydamage/{sample}_pydamage/{sample}_pydamage_filtered_results.csv", sample=config["accession"]),
        # # #pydamage2fasta
        # expand("../results/04-aDNA_authentication/ancient_contigs_fasta/{sample}_ancient.fasta", sample=config["accession"]),
        # checkv
        # expand("../results/05-quality_check/{sample}_checkv", sample=config["accession"]),
        # expand("../results/05-quality_check/{sample}_checkv/quality_summary.tsv", sample=config["accession"]),
        # expand("../results/05-quality_check/checkv_filtered_csv/{sample}_checkv_filtered.csv", sample=config["accession"]),
        # expand("../results/05-quality_check/checkv_filtered_fasta/{sample}_checkv_filtered.fasta", sample=config["accession"]),
        # expand("../results/05-quality_check/checkv_filtered_csv/all_ancient_viruses_checkv_filtered.csv"),
        # expand("../results/05-quality_check/checkv_filtered_fasta/all_ancient_viruses_checkv_filtered.fasta"),
        # #taxonomic classification - PhaGCN2
        # expand("../results/06-taxonomic_classification/all_ancient_viruses_taxonomy.csv"),

include: "rules/downloads.smk"
include: "rules/preprocessing.smk"
# include: "rules/assembly.smk"
# include: "rules/viral_prediction.smk"
# include: "rules/aDNA_authentication.smk"
# include: "rules/quality_check.smk"
# include: "rules/taxonomic_classification_2.smk"
